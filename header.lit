@title Header and entry point
@overwrite_css style.css
@comment_type ; %s

@s Entry point

When the Game Boy is powered on, it loads the cartridge along with a 256 byte boot ROM that shows the Nintendo logo and plays the bootup sound. After the sequence finishes, it will instantly jump to address `\$100`, which at this point it hands over control to my program.

There's not much room available here, because the header starts at address `\$104`. So, I'll just do a jump to the *actual* initialization routine.

--- Entry point
	jp Init
---

@s Header

Next up is the Nintendo logo bitmap. The boot ROM checks this bitmap, and will lock up the Game Boy if it does not match. Fortunately, the linker will handle this automatically, so I don't need to include this data myself.

Right after *that*, I define the cartridge header. You can think of this as "metadata" about the game and the kind of cartridge it should be burned into. [Here](https://gbdev.io/pandocs/The_Cartridge_Header.html#the-cartridge-header) is where you can find more information about its fields.

There are two checksums in the header, the header checksum and the global checksum, out of which the boot ROM will only check the former. The linker will handle both of these as well, so I simply set these to 0 here.

--- Header
	db "PONG FOR REAL  " ; game title
	db $00 ; cgb enabled ("no")
	db "ZD" ; new licensee code
	db $00 ; sgb enabled ("no")
	db $00 ; cart type ("ROM")
	db $00 ; rom size ("32k")
	db $00 ; ram size ("none")
	db $01 ; destination ("international")
	db $33 ; old licensee code ("use new instead")
	db $00 ; rom version
	db 0   ; header chksum, handled by linker
	dw 0   ; global chksum, handled by linker
---
