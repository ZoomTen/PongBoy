@title Fading the screen in and out
@overwrite_css style.css
@comment_type ; %s

@s Creating the fade effects

I want to add a nice fade in/out effect to the game. Originally I was gonna be fancy and make a "unique" fading routing that switches between phases every frame, but I think I'll just be making a simple one.

The idea here is change the palettes every odd frame or so:

<figure>
<img src="../figures/fade1.svg">
<figcaption>A sensible fading routine</figcaption>
</figure>

I'll want to write a routine to delay C amount of frames, calling `DelayFrame` and decrementing C each time until C is 0.

--- DelayFrames
;;--
;; @param  C  amount of frames to wait
;; @return C  0
;;--
DelayFrames::
.loop
	call DelayFrame
	dec c
	jr nz, .loop
	ret
---
--- Helper functions +=
@{DelayFrames}
---

Next up, a shortcut to apply the palette data and wait 2 frames using the above function. If doing 2 frames, `call DelayFrame; jp DelayFrame` may suffice, but for some reason I want the delay between phases to be configurable.

--- ApplyPaletteWait
;;--
;; Applies palette A and then wait 2 frames.
;; 
;; @param  A  palette data
;;--
ApplyPaletteWait::
	ldh [rBGP], a
	ldh [rOBP0], a
	ldh [rOBP1], a
	ld c, 2 ; frames to wait between phases
	jp DelayFrames
---

Then, the actual routines. I'll just be writing palette data and then a short delay between writes.

--- FadeOut
FadeOut::
	ld a, %11100100
	call ApplyPaletteWait
	ld a, %10010000
	call ApplyPaletteWait
	ld a, %01000000
	call ApplyPaletteWait
	xor a  ; %00000000
	jp ApplyPaletteWait
---

--- FadeIn
FadeIn::
	xor a  ; %00000000
	call ApplyPaletteWait
	ld a, %01000000
	call ApplyPaletteWait
	ld a, %10010000
	call ApplyPaletteWait
	ld a, %11100100
	jp ApplyPaletteWait
---

--- Helper functions +=
@{FadeOut}
@{FadeIn}
@{ApplyPaletteWait}
---

@s Applying the fade effects

First I'll apply the fade-in effect to the title screen. I replaced the `jp EnableLCD` instruction with the `call` equivalent, and then jumping to `FadeIn`.

--- GM_Title init code :=
GM_Title_init::
	call DisableLCD
@{Set up the title screen graphics}
	call EnableLCD
	jp FadeIn
---

For the gameplay entry, I decided to use `DelayFrames` to wait some amount of time before fading out and resetting the game state.

--- GM_Game init code :=
GM_Game_init::
	ld c, 32
	call DelayFrames
	call FadeOut
	call DisableLCD
@{Set up the game graphics}
@{Set up sprites and variables}
	call EnableLCD
	jp FadeIn
---
